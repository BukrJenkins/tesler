     {
        "title": "Выполнена",
        "key": "testCheckbox",
        "type": "checkbox",
      }, {
        "title": "Описание",
        "key": "testText",
        "type": "text"
      }, {
        "title": "Дата",
        "key": "testDate",
        "type": "date"
      }, {
        "title": "Дата и время",
        "key": "testDateTime",
        "type": "dateTime"
      }

    // Фильтр по умолчанию
    INSERT INTO BC_PROPERTIES (ID, BC, FILTER, LIMIT, REPORT_PERIOD) VALUES (APP_SEQ.nextval, 'bcExampleEquals', '"testNumber.equals=1"', 500, NULL);

     // WidgetDTO.java
      @Getter
      @Setter
      @NoArgsConstructor
      public class VanillaDocDTO extends DataResponseDTO {
          private String testText;
          @SearchParameter(type = BOOLEAN)
          private Boolean testCheckbox;
          private LocalDateTime testDate;
          private LocalDateTime testDateTime;

          public WidgetDTO (SourceEntity sourceEntity) {
              this.id = sourceEntity.getId().toString();
              this.testText = sourceEntity.getDescription();
              this.testCheckbox = sourceEntity.getIsExecute();
              this.testDate = sourceEntity.getPlanDate();
              this.testDateTime = sourceEntity.getCreateDate();
      }


      // FieldMetaBuilder.java
      @Service
      public class FieldMetaBuilder extends FieldMetaBuilder<DTOClass> {

          @Override
          public void buildRowDependentMeta(RowDependentFieldsMeta<VanillaDocDTO> fields, Long rowId, Long parRowId) {}

          @Override
          public void buildRowDependentMetaForNewRecord(RowDependentFieldsMeta<VanillaDocDTO> fields, Long parRowId) {}

          @Override
          public void buildIndependentMeta(FieldsMeta<VanillaDocDTO> fields, Long parRowId) {
              fields.enableFilter(
                testCheckbox,
                testText,
                testDateTime,
                testDateTimeWithSeconds
              );
          }
      }

     