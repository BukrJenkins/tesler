<h3>Отображение фильтров отчетной даты</h3>
Для того, чтобы отобразить фильтры отчетной даты, необходимо в объекте виджета <b>options</b> выставить в <b>true</b> поля:<br>
<b>showPivotDateFrom</b> - Отображение даты начала<br>
<b>showPivotDateTo</b> - Отображение даты окончания<br>
<pre>{
  "name" : "sqlDocPivotPivot3",
  "title" : "Сводная таблица 3",
  "type" : "Pivot",
  "bc" : "sql-doc-pivot",
  "fields" : [
    ...
  ]
  "options" : {
    "showPivotDateFrom" : true,
    "showPivotDateTo" : true
  }
}</pre>
<br>
<br>

<h3>Описание таблицы</h3>
<p>Схема вывода таблицы определят в таблице WIDGET в поле PIVOT_FIELDS при условии что оно не null и тип виджета PIVOT</p>

PIVOT_FIELDS - это json объект в формате IPivotMeta <br>
(<b>?</b> - рядом с именем поля указывает что оно не обязательное)
<pre>
export interface IPivotMeta {
    /**
     * Содержимое верхней угловой ячейки
     */
    title: string
    /**
     * Выводить ли границы ячееек
     */
    bordered?: boolean
    /**
     * Ось строк для таблицы
     */
    rows: ITableColRow[]
    /**
     * Ось колонок для таблицы
     */
    cols: ITableColRow[]
    /**
     * Определяет для каждой координаты на осях колонок и строк
     * способ вывода ячейки
     */
    values: ITableValue[]
}
</pre><br>

1. Поля rows, cols, - это массив объктов одного из двух типов
<pre>
export type ITableColRow = ITableColRowConst | ITableColRowFromData
</pre><br>

1.1 Либо это определение константной (дополнительной) колонки или строки
<pre>
export interface ITableColRowConst extends ICellStyle {
    /**
     * Уникальный id координаты(строки,столбца)
     */
    id: string
    /**
     * from: 'const' или отсутствие ключа from - сигнализирует о том что значения для оси константа заданная в title
     */
    from?: 'const'
    /**
     * Текст заголовка строки, столбца
     */
    title: string
    /**
     * Вложенная ось
     * Определение колонок которые будут выводится под этой колонкой или
     * строк внутри этой строки (разворачиваемые через нажатие на +)
     */
    children?: ITableColRow[]
}
</pre><br>

1.2 Либо это определение списка колонок или строк который будет взят из данных <br>
(все уникальные значения по key)
<pre>
export interface ITableColRowFromData extends ICellStyle {
    /**
     * Уникальный id координаты(строки,столбца)
     */
    id: string
    /**
     * from: 'data' - сигнализирует о том что значения для оси(строк,столбцов) нужно брать из данных
     */
    from: 'data'
    /**
     * Из какого поля брать значения
     */
    key: string
    /**
     * Вложенная ось
     * Определение колонок которые будут выводится под этой колонкой или
     * строк внутри этой строки (разворачиваемые через нажатие на +)
     */
    children?: ITableColRow[]
}
</pre><br>

<b>ПОЛЕ id ОБЯЗАТЕЛЬНО ДЛЯ ЗАПОЛНЕНИЕ И ДОЛЖНО БЫТЬ УНИКАЛЬНЫМ ДЛЯ ВСЕЙ ОСИ ВКЛЮЧАЯ ВЛОЖЕННЫЕ</b><br><br>

2. Поле values массив который для каждой координаты ячейки(поля row, col) определят как оно будет выводится
<pre>
export interface ITableValue extends ICellStyle {
    /**
     * Уникальный id строки
     */
    row: string
    /**
     * Уникальный столбца
     */
    col: string
    /**
     * Описание способа вывода значения (как в обычных таблицах)
     */
    field: IFieldMeta
}
</pre><br>

3. При определение осей и значений можно использовать универсальные поля которые задают оформление
<pre>
export interface ICellStyle {
    /**
     * Выравнивание текста в ячейке
     */
    align?: 'left' | 'right' | 'center'
    /**
     * Выводить значение жирным начертанием
     */
    bold?: boolean
    /**
     * Выводить значение курсивом
     */
    cursive?: boolean
    /**
     * Раскрыть ли строку по умолчанию - НЕ РЕАЛИЗОВАННО
     */
    expanded?: boolean
}
</pre><br>
        